  version: 2.1
  orbs:
    aws-eks: circleci/aws-eks@1.1.0
    kubernetes: circleci/kubernetes@0.4.0
    envsubst: sawadashota/envsubst@volatile

  parameters:
    docker_image:
      type: string
      default: python:3.10.0-base

  jobs:
    lint-app:
      executor: aws-eks/python3
      steps:
        - checkout
        - run:
            name: install dependencies
            command: |
              make setup
              . venv/bin/activate
              make install
        - run:
            name: run lint
            command: |
              . venv/bin/activate
              make lint  

    build-push-docker-image:
      machine: true
      working_directory: ~/app
      steps:
        - checkout
        - run:
            name: build and push docker image
            command: |
              #Login to docker hub
              docker login --username ${DOCKER_USERNAME} --password ${DOCKER_PASSWORD}
              # Build image and add a descriptive tag
              docker build --tag=capstonedocker .
              # List docker images
              docker image ls
              # Tag and push image to a docker repository
              docker tag capstonedocker:latest dockerjsb/capstonedocker:${CIRCLE_SHA1}
              docker push dockerjsb/capstonedocker:${CIRCLE_SHA1}

    # Creation of Cluster
    create-cluster:
      executor: aws-eks/python3
      parameters:
        cluster-name:
          description: |
            Name of the EKS cluster
          type: string
          default: capstonecluster3
      steps:
        - run:
            name: Install the eksctl tool
            command: |
              if which eksctl > /dev/null; then
                echo "eksctl is already installed"
                exit 0
              fi
              mkdir -p eksctl_download
              curl --silent --location --retry 5 "https://github.com/weaveworks/eksctl/releases/latest/download/eksctl_$(uname -s)_amd64.tar.gz" \
                | tar xz -C eksctl_download
              chmod +x eksctl_download/eksctl
              SUDO=""
              if [ $(id -u) -ne 0 ] && which sudo > /dev/null ; then
                SUDO="sudo"
              fi
              $SUDO mv eksctl_download/eksctl /usr/local/bin/
              rmdir eksctl_download
        - aws-eks/install-aws-iam-authenticator:
            release-tag: ''
        - aws-eks/create-cluster:
            cluster-name: capstonecluster3
            node-type: t3.medium
            show-eksctl-command: true

      # Test the Cluster
    test-cluster:
      executor: aws-eks/python3
      parameters:
        cluster-name:
          description: |
            Name of the EKS cluster
          type: string
      steps:
        - kubernetes/install
        - aws-eks/update-kubeconfig-with-authenticator:
            cluster-name: << parameters.cluster-name >>
        - run:
            command: |
              echo "testing cluster"
              kubectl get services
              kubectl get pods
              kubectl describe pods
              kubectl get nodes
              kubectl get deployment
              kubectl get services -o wide
            name: Test cluster

    create-deployment:
      executor: aws-eks/python3
      parameters:
        cluster-name:
          description: |
            Name of the EKS cluster
          type: string
      steps:
        - checkout
        - envsubst/install
        - run:
            name: execute the envsubst
            command: |
              DOCKER_TAG_VERSION=capstonedocker:${CIRCLE_SHA1}
              echo $DOCKER_TAG_VERSION
              envsubst < deployments/nginx-deployment.yaml > confidential_config.txt
              cat confidential_config.txt

    delete-cluster:
      executor: aws-eks/python3
      steps:
        - run:
            name: Install the eksctl tool
            command: |
              if which eksctl > /dev/null; then
                echo "eksctl is already installed"
                exit 0
              fi
              mkdir -p eksctl_download
              curl --silent --location --retry 5 "https://github.com/weaveworks/eksctl/releases/latest/download/eksctl_$(uname -s)_amd64.tar.gz" \
                | tar xz -C eksctl_download
              chmod +x eksctl_download/eksctl
              SUDO=""
              if [ $(id -u) -ne 0 ] && which sudo > /dev/null ; then
                SUDO="sudo"
              fi
              $SUDO mv eksctl_download/eksctl /usr/local/bin/
              rmdir eksctl_download
        - aws-eks/delete-cluster:
            cluster-name: capstonecluster3
            aws-region: $AWS_DEFAULT_REGION
            wait: true

  workflows:
    deployment:
      jobs:
        - create-deployment:
            cluster-name: capstonecluster3
