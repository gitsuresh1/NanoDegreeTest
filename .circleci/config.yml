  version: 2.1
  orbs:
    aws-eks: circleci/aws-eks@1.1.0
    kubernetes: circleci/kubernetes@0.4.0

  parameters:
    docker_image:
      type: string
      default: python:3.10.0-base

  jobs:
    # Creation of Cluster
    create-cluster:
      executor: aws-eks/python3
      parameters:
        cluster-name:
          description: |
            Name of the EKS cluster
          type: string
          default: capstonecluster
      steps:
        - run:
            name: Install the eksctl tool
            command: |
              if which eksctl > /dev/null; then
                echo "eksctl is already installed"
                exit 0
              fi
              mkdir -p eksctl_download
              curl --silent --location --retry 5 "https://github.com/weaveworks/eksctl/releases/latest/download/eksctl_$(uname -s)_amd64.tar.gz" \
                | tar xz -C eksctl_download
              chmod +x eksctl_download/eksctl
              SUDO=""
              if [ $(id -u) -ne 0 ] && which sudo > /dev/null ; then
                SUDO="sudo"
              fi
              $SUDO mv eksctl_download/eksctl /usr/local/bin/
              rmdir eksctl_download
        - aws-eks/install-aws-iam-authenticator:
            release-tag: ''
        - aws-eks/create-cluster:
            cluster-name: capstonecluster
            node-type: t3.medium

      # Test the Cluster
    test-cluster:
      executor: aws-eks/python3
      parameters:
        cluster-name:
          description: |
            Name of the EKS cluster
          type: string
      steps:
        - kubernetes/install
        - aws-eks/update-kubeconfig-with-authenticator:
            cluster-name: << parameters.cluster-name >>
        - run:
            command: |
              kubectl get services
              kubectl get pods
              kubectl describe pods
              kubectl get nodes
              kubectl get deployment
              kubectl get services -o wide
            name: Test cluster
  workflows:
    deployment:
      jobs:
        #- create-cluster:
         #   cluster-name: capstonecluster
        - test-cluster:
            cluster-name: capstonecluster





