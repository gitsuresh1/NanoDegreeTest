#Capstone Config
version: '2.1'
orbs:
  aws-eks: circleci/aws-eks@2.0
  kubernetes: circleci/kubernetes@1.0

jobs:
  lint-app:
    docker:
      - image: circleci/python:3.7.3-stretch
    steps:
      - checkout
      - run:
          name: install dependencies
          command: |
            make setup
            . venv/bin/activate
            make install
      - run:
          name: run lint
          command: |
            . venv/bin/activate
            make lint    

  build-push-docker-image:
    machine: true
    working_directory: ~/app
    steps:
      - checkout
      - run:
          name: build and push docker image
          command: |
            echo docker user name : ${DOCKER_USERNAME}
            echo  docker user pwd : ${DOCKER_PASSWORD}
            #Login to docker hub
            docker login --username ${DOCKER_USERNAME} --password ${DOCKER_PASSWORD}
            # Build image and add a descriptive tag
            docker build --tag=capstonedocker .
            # List docker images
            docker image ls
            # Tag and push image to a docker repository
            docker tag capstonedocker dockerjsb/capstonedocker
            docker push dockerjsb/capstonedocker

  deploy-to-cluster:
    executor: aws-eks/python3
    parameters:
      cluster-name:
        description: |
          uda-cap
        type: string
    steps:
      - checkout
      - kubernetes/install
      - aws-eks/update-kubeconfig-with-authenticator:
          cluster-name: << parameters.cluster-name >>
          install-kubectl: true
      - kubernetes/create-or-update-resource:
          # get-rollout-status: true
          resource-file-path: deployment.yaml
          resource-name: deployment/capstonedeployment

  check-cluster:
    executor: aws-eks/python3
    parameters:
      cluster-name:
        description: |
          capstonecluster
        type: string
    steps:
      - kubernetes/install
      - aws-eks/update-kubeconfig-with-authenticator:
          cluster-name: << parameters.cluster-name >>
      - run:
          name: check cluster
          command: |
            kubectl get nodes -o wide
            kubectl get deployment -A
            kubectl get svc -A

workflows:
  deployment:
    jobs:
      - lint-app
      - build-push-docker-image:
          requires: [lint-app]